                    ==================================
                    =                                =
                    =  s2a_api_client Documentation  =
                    =                                =
                    ==================================

                     Ship2Anywhere API client library


=======================
I N S T A L L A T I O N
=======================

There is several ways to download and install s2a_api_client.
s2a_api_client resides on github.com at https://github.com/ship2anywhere/s2a-api-client

--------
1. Links
--------

https://github.com/ship2anywhere/s2a-api-client.git
git@github.com:ship2anywhere/s2a-api-client.git
git://github.com/ship2anywhere/s2a-api-client.git

----------------------
2. Direct Installation
----------------------

pip install git+https://github.com/ship2anywhere/s2a-api-client.git

--------------------
3. Clone and install
--------------------

git clone https://github.com/ship2anywhere/s2a-api-client.git
cd s2a-api-client
python setup.py install


===============
S E R V I C E S
===============

Service modules are located at s2a_api_client/

----------------
1. Quote Service
----------------
    The 'Get quote' service allows for obtaining shipping quotes from carriers integrated with Ship2Anywhere.
    
    Example: 
    
    # import s2a api client
    from s2a_api_client  import quote
    
    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    quote_service = quote.QuoteService(api_url)
    
    # get quote
    request = {} # add python structure for Quote Service 
    r = quote_service.get_quote(request) # method returns dictionary
                                         # compilant with JSON structure
                                         # for Quote Response
                                         
----------------
2. Order Service
----------------

    ~~~~~~~~~~~~~~~
    a. Create order
    ~~~~~~~~~~~~~~~
    The 'Create order' service initializes the booking process.
    
    Example: 
    
    # import s2a api client
    from s2a_api_client import order

    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    order_service = order.OrderService(api_url)
    
    # create order
    request = {} # add python structure for Create Order Service
    token = "1234567890" # token from OAuth2.0 service
    r = order_service.create_order(request, token) # method returns dictionary
                                                   # compilant with JSON structure
                                                   # for Order Response
    ~~~~~~~~~~~~~~~
    b. Accept order
    ~~~~~~~~~~~~~~~
    After creating an order the client can either accept or cancel it. When the order has been
    accepted (payment information provided), the booking process begins.
    
    Example: 
    
    # import s2a api client
    from s2a_api_client import order

    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    order_service = order.OrderService(api_url)
    
    # accept order
    request = {} # add python structure for Create Order Service
    order_id = "S2AO000001" # S2A Order ID
    token = "1234567890" # token from OAuth2.0 service
    r = order_service.accept_order(request, order_id, token) # method returns dictionary
                                                   # compilant with JSON structure
                                                   # for Order Response
    ~~~~~~~~~~~~~~~
    c. Accept order
    ~~~~~~~~~~~~~~~
    Cancel created order.
    
    Example: 
    
    # import s2a api client
    from s2a_api_client import order

    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    order_service = order.OrderService(api_url)
    
    # accept order
    order_id = "S2AO000001" # S2A Order ID
    token = "1234567890" # token from OAuth2.0 service
    r = order_service.cancel_order(order_id, token) # method returns dictionary
                                                    # compilant with JSON structure
                                                    # for Order Response
    ~~~~~~~~~~~~~~
    d. Fetch order
    ~~~~~~~~~~~~~~
    The 'Fetch order' service allows for monitoring booking with the polling technique
    
    Example: 
    
    # import s2a api client
    from s2a_api_client import order

    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    order_service = order.OrderService(api_url)
    
    # accept order
    order_id = "S2AO000001" # S2A Order ID
    token = "1234567890" # token from OAuth2.0 service
    r = order_service.fetch_order(order_id, token) # method returns dictionary
                                                    # compilant with JSON structure
                                                    # for Order Response
--------------------
3. Documents Service
--------------------

    The 'Documentation" service allows downloading shipping documents which includes shipping labels

    Example: 
    
    # import s2a api client
    from s2a_api_client import doc

    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    document_service = doc.DocumentService(api_url)
    
    # accept order
    order_id = "S2AO000001" # S2A Order ID
    token = "1234567890" # token from OAuth2.0 service
    r = document_service.download_documents(order_id, token) # method returns dictionary
                                                             # compilant with JSON structure
                                                             # for Documentation Response
-------------------
4. Tracking Service
-------------------

    Tracking allows for obtaining information concerning the state of the shipment
    
    Example: 
    
    # import s2a api client
    from s2a_api_client import track

    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    track_service = track.TrackService(api_url)
    
    # accept order
    tracking_number = "ABC123" # Tracking Number
    r = track_service.track(args.tracking_number) # method returns dictionary
                                                  # compilant with JSON structure
                                                  # for Documentation Response
---------------
5. S2aApi Class
---------------
    If you want to access whole set of services, you could use S2aApi class, which includes all of
    the services.
    
    Example:
    
    # import s2a api client
    from s2a_api_client import S2aApi
    
    # create object
    api_url = "https://api.s2asandbox.com/v1.0/"
    s2a_api = S2aApi(api_url)
    
    # get services
    s2a_api.quote_service.get_quote(...)
    s2a_api.order_service.create_order(...)
    s2a_api.order_service.accept_order(...)
    s2a_api.order_service.cancel_order(...)
    s2a_api.order_service.fetch_order(...)
    s2a_api.doc_service.download_documents(...)
    s2a_api.track_service.track(...)


=================
E X E P T I O N S
=================

TODO

Each exception contains of error message and HTTP Response Code, except of S2aApiException, which
contains only error message.

------------------
1. S2aApiException
------------------
Exception is raised if ...

----------------------
2. S2aApiHttpException
----------------------

------------------
3. ServerException
------------------

-------------------
4. RequestException
-------------------

------------------
5. AccessException
------------------

--------------------
6. NotFoundException
--------------------

------------------------
7. ServiceLogicException
------------------------


=============
S C R I P T S
=============

TODO


===================
R E F E R E N C E S
===================

1. S2A API Documentation: https://www.ship2anywhere.com.au/developers/api-functionality/
